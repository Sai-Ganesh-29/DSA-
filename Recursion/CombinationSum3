class Solution {
    public void solve(List<List<Integer>> ans,int[] candidates,int target,int k,List<Integer> temp,int i){
        if(target == 0 && temp.size() == k){
            ans.add(new ArrayList<>(temp));
            return;
        }
        if(target < 0 || i == candidates.length || temp.size()>k) return;
        temp.add(candidates[i]);
        int x = target-candidates[i];
        solve(ans,candidates,x,k,temp,i+1);
        temp.remove(temp.size()-1);
        solve(ans,candidates,target,k,temp,i+1);
        return;
    }
    public List<List<Integer>> combinationSum3(int k, int n) {
        int arr[] = {1,2,3,4,5,6,7,8,9};
        List<List<Integer>> ans = new ArrayList<>();
        solve(ans,arr,n,k,new ArrayList<>(),0);
        return ans;
    }
}
