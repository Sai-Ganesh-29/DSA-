class Solution {
    public void solve(List<List<Integer>> ans,int[] candidates,int target,List<Integer> temp,int i){
        if(target == 0){
            ans.add(new ArrayList<>(temp));
            return;
        }
        if(i == candidates.length) return;
        for(int k = i;k<candidates.length;k++){
            if(k>i && candidates[k-1] == candidates[k]) continue;
            if(candidates[i]>target) break;
            temp.add(candidates[k]);
            solve(ans,candidates,target-candidates[k],temp,k+1);
            temp.remove(temp.size()-1);
        }
        return;
    }
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<List<Integer>> ans = new ArrayList<>();
        solve(ans,candidates,target,new ArrayList<>(),0);
        return ans;
    }
}
